@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page d-flex flex-column" style="min-height: 100vh;">
    <!-- Top AppBar Section -->
    <MudAppBar Color="Color.Default" Fixed="true" Style="background-color: #1B7D84;">
        <MudText Typo="Typo.h6" Style="color: white; padding-left: 1rem;">
            @TitleText
        </MudText>

        <MudSpacer /> <!-- Pushes the button to the right -->
        <!-- Sign In/Out Button in Upper Right -->
        @if (GlobalState.IsAuthenticated)
        {
            <MudButton OnClick="HandleSignOut" Variant="Variant.Outlined" Style="border-color: white; color: white;">
                Sign Out
            </MudButton>
        }
        else
        {
            <MudButton OnClick="NavigateToSignIn" Variant="Variant.Outlined" Style="border-color: white; color: white;">
                Sign In
            </MudButton>
        }
    </MudAppBar>

    <!-- Sidebar + Main Content -->
    <div class="d-flex" style="flex: 1; margin-top: 65px;">
        <NavMenu /> <!-- No need to pass AuthStateChanged anymore -->
        <!-- Main Content -->
        <div style="flex: 1; padding: 1rem; overflow-y: auto; height: calc(100vh - 65px);">
            @Body
        </div>
    </div>
</div>

@code {
    private string TitleText = "My Application"; // Default title

    protected override async Task OnInitializedAsync()
    {
        await UpdateAuthState();
    }

    private async Task UpdateAuthState()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            GlobalState.IsAuthenticated = true;
            TitleText = $"Hello, {GlobalState.Name}"; // Dynamic title
        }
        else
        {
            GlobalState.IsAuthenticated = false;
            TitleText = ""; // Default title when signed out
        }

        StateHasChanged();
    }

    private async Task HandleSignOut()
    {
        GlobalState.IsAuthenticated = false;
        GlobalState.Name = null;
        GlobalState.Role = null;
        TitleText = ""; // Reset the title after sign-out
        GlobalState.NotifyAuthStateChanged(); // Trigger nav menu update
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToSignIn()
    {
        NavigationManager.NavigateTo("/SignIn");
    }
}
