@page "/DoctorPage/{DoctorId:int}"
@layout DoctorLayout
@inject NavigationManager NavigationManager
@inject IDoctorService DoctorService

<h3 style="color: #1B7D84;">Doctor Page</h3>

@if (doctorDetails != null)
{
    <div>
        <h4>Doctor Details</h4>
        <p><strong>UID:</strong> @doctorDetails.UID</p>
        <p><strong>Username:</strong> @doctorDetails.UserName</p>
        <p><strong>Email:</strong> @doctorDetails.Email</p>
        <p><strong>Phone:</strong> @doctorDetails.Phone</p>
        <p><strong>Current Branch:</strong> @doctorDetails.CurrentBrunch</p>
        <p><strong>Level:</strong> @doctorDetails.Level</p>
        <p><strong>Degree:</strong> @doctorDetails.Degree</p>
        <p><strong>Working Years:</strong> @doctorDetails.WorkingYear</p>
        <p><strong>Joining Date:</strong> @doctorDetails.JoiningDate.ToShortDateString()</p>
        <p><strong>Department ID:</strong> @doctorDetails.DepId</p>
    </div>
}
else if (isLoading)
{
    <p>Loading doctor details...</p>
}
else
{
    <p style="color: red;">Failed to load doctor details.</p>
}

<div>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToPatientRecords"
               Style="background-color: #1B7D84; color: white; font-size: 1rem; padding: 10px 10px;">
        View Patient Records
    </MudButton>
</div>

<div style="margin-top: 20px;">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToAddPatientRecord"
               Style="background-color: #1B7D84; color: white; font-size: 1rem; padding: 10px 10px;">
        Add Patient Record
    </MudButton>
</div>

@code {
    [Parameter]
    public int DoctorId { get; set; }

    private DoctorOutPutDTO doctorDetails;
    private bool isLoading = true;

    private void NavigateToPatientRecords()
    {
        // Navigate to the PatientRecords page with DoctorId
        NavigationManager.NavigateTo($"/PatientRecords/{DoctorId}");
    }

    private void NavigateToAddPatientRecord()
    {
        // Navigate to Add Patient Record page with DoctorId
        NavigationManager.NavigateTo($"/AddPatientRecord/{DoctorId}");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the doctor details by ID
            doctorDetails = await Task.Run(() => DoctorService.GetDoctorDetailsById(DoctorId));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching doctor details: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}

