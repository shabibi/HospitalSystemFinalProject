@page "/AddBranch/{BranchId:int?}"
@inject IBranchService BranchService
@inject NavigationManager NavigationManager
<MudContainer MaxWidth="MaxWidth.Medium" Class="my-5" Style="display: flex; flex-direction: column; align-items: center;">
    <MudText Typo="Typo.h4" Align="Align.Center" Style="color: #1B7D84; margin-bottom: 20px;">
        @(BranchId.HasValue ? "Edit Branch" : "Add Branch")
    </MudText>
    <MudCard Style="width: 100%;">
        <MudCardContent>
            <MudForm @ref="branchForm" Valid="@isFormValid">
                <MudTextField T="string" Label="Branch Name" @bind-Value="branchModel.BranchName" Required="true" />
                <MudTextField T="string" Label="Location" @bind-Value="branchModel.Location" Required="true" />
                <MudSwitch T="bool" Label="Active" @bind-Checked="branchModel.BranchStatus" />
            </MudForm>
        </MudCardContent>
        <MudCardActions Style="justify-content: flex-end;">
            <MudButton Variant="Variant.Text" OnClick="Cancel">Cancel</MudButton>
            <MudButton Variant="Variant.Filled" Disabled="!isFormValid" OnClick="SaveBranch">Save</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>
@code {
    [Parameter] public int? BranchId { get; set; }
    private BranchDTO branchModel = new();
    private MudForm branchForm;
    private bool isFormValid;
    protected override void OnInitialized()
    {
        if (BranchId.HasValue)
        {
            branchModel = BranchService.GetBranchById(BranchId.Value);
        }
    }
    private void SaveBranch()
    {
        if (BranchId.HasValue)
        {
            //BranchService.UpdateBranch(BranchId.Value, branchModel);
        }
        else
        {
            //BranchService.AddBranch(branchModel);
        }
        NavigationManager.NavigateTo("/ManageBranch");
    }
    private void Cancel()
    {
        NavigationManager.NavigateTo("/ManageBranch");
    }
}