@layout StaffLayout
@page "/SchedulePage/{clinicId:int}"
@inject IBookingService bookingService
@inject IClinicService clinicService
@inject ISnackbar Snackbar

<MudPaper Elevation="4" Class="p-4 mx-auto" Style="max-width: 800px;">
    <MudText Typo="Typo.h3" Align="Align.Center" Class="mb-4" Style="color: #1B7D84;">
         Schedule Appointments
    </MudText>
    <MudDatePicker @bind-Date="selectedDate" Label="Pick a Date" Required="true" Style="font-size: 1.2rem;" />

    <MudButton Variant="Variant.Filled" Style="background-color: #1B7D84; color: white;" OnClick="GenerateSchedule" Disabled="!isDateValid">
        Generate Schedule
    </MudButton>

</MudPaper>

@if (appointments != null && appointments.Any())
{
    <MudTable Items="appointments" Dense="true" Hover="true" Class="mt-4">
        <HeaderContent>
            <MudTh>Start Time</MudTh>
            <MudTh>End Time</MudTh>
            <MudTh>Status</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.StartTime.ToString(@"hh\:mm")</MudTd>
            <MudTd>@context.EndTime.ToString(@"hh\:mm")</MudTd>
            <MudTd>
                @(context.Staus ? "Booked" : "Available")
            </MudTd>
        </RowTemplate>
    </MudTable>
}
else if (appointments != null && !appointments.Any())
{
    <MudText Typo="Typo.body1" Align="Align.Center" Class="mt-2">
        No slots available for the selected date.
    </MudText>
}

@code {
    [Parameter] public int clinicId { get; set; }
    private DateTime? selectedDate;
    private bool isDateValid => selectedDate.HasValue && selectedDate >= DateTime.Today;
    private IEnumerable<Booking> appointments;

    private async Task GenerateSchedule()
    {
        try
        {
            if (!isDateValid)
            {
                Snackbar.Add("Please select a valid future date.", Severity.Warning);
                return;
            }

            // Call the service to generate and retrieve appointments
            appointments = bookingService.ScheduledAppointments(clinicId, selectedDate.Value).ToList();

            Snackbar.Add("Appointments generated successfully!", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}
