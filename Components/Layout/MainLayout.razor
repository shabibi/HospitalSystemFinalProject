@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<div class="page d-flex flex-column" style="min-height: 100vh;">

    <!-- Carousel Section -->
    <div class="carousel-container" style="width: 100%; height: 250px;">
        <MudCarousel Class="mud-width-full" Style="height: 100%;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
            <MudCarouselItem Transition="transition" Color="@Color.Primary">
                <div class="d-flex" style="height: 100%;">
                    <MudImage Src="/Images/img3.png" Alt="Carousel Image" Style="width: 100%; height: 100%; object-fit: cover; margin: auto;" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="transition" Color="@Color.Primary">
                <div class="d-flex" style="height: 100%;">
                    <MudImage Src="/Images/img4.png" Alt="Carousel Image" Style="width: 100%; height: 100%; object-fit: cover; margin: auto;" />
                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="transition" Color="@Color.Primary">
                <div class="d-flex" style="height: 100%;">
                    <MudImage Src="/Images/img5.png" Alt="Carousel Image" Style="width: 100%; height: 100%; object-fit: cover; margin: auto;" />
                </div>
            </MudCarouselItem>
        </MudCarousel>
    </div>

    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <!-- Main Content Area -->
        <div class="main-content" style="flex: 1; padding: 1rem;">
            <!-- Right-Aligned Button -->
            <MudButton OnClick="HandleSignInOut" Variant="Variant.Outlined" Style="float: right; margin: 1rem; border-color: #1B7D84; color: #1B7D84;">
                @SignInOutText
            </MudButton>

            <!-- Main Article Section -->
            <main>
                <article class="content px-4">
                    @Body
                </article>
            </main>
        </div>
    </div>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    private string SignInOutText = "Sign In";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            SignInOutText = "Sign Out";
        }
        else
        {
            SignInOutText = "Sign In";
        }
    }

    private async Task HandleSignInOut()
    {
        if (SignInOutText == "Sign Out")
        {
            await Logout();
            SignInOutText = "Sign In";
        }
        else
        {
            NavigationManager.NavigateTo("/SignIn");
        }
    }

    private async Task Logout()
    {
        Console.WriteLine("Logging out...");
        // Perform token clearing or logout logic here
        await Task.Delay(500); // Simulating async operation
    }
}
