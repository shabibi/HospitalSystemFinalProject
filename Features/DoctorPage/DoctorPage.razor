@page "/DoctorPage/{DoctorId:int}"
@inject NavigationManager NavigationManager
@inject IDoctorService DoctorService
@inject IDepartmentService DepartmentService
@inject IClinicService clinicService
@inject ISnackbar Snackbar 

@if (loading)
{
    <MudText Typo="Typo.body1" Align="Align.Center" Style="color: gray;">Loading doctor information...</MudText>
}
else if (DoctorDetails != null)
{
    <MudContainer MaxWidth="MaxWidth.Medium" Class="my-5">
        <MudText Typo="Typo.h3" Align="Align.Center" Style="color: #1B7D84;">@DoctorDetails.UserName</MudText>
        <MudText Typo="Typo.subtitle1" Align="Align.Center" Style="color: #33BEC8;">@DoctorDetails.Level - @CapitalizeWords(DepartmentName)</MudText>

        <MudCard Class="mt-5">
            <MudCardContent>
                <MudGrid>
                    <!-- Doctor Image -->
                    <MudItem xs="12" md="4" Class="d-flex justify-center align-center">
                        <div style="width: 100%; max-width: 200px; height: auto; overflow: hidden;">
                            <img src="@($"/Images/Users/Doctors/{DoctorDetails.UID}.webp" ?? "/Images/Users/Doctors/defaultDoctor.png")"
                            alt="@DoctorDetails.UserName"
                            style="width: 100%; height: auto; border-radius: 4px; border: 1px solid #ccc;" />
                        </div>
                    </MudItem>

                    <MudItem xs="12" md="8">
                        <MudGrid>
                            <MudItem xs="12" md="12">
                                <MudDivider Class="my-2" />
                                <MudText Typo="Typo.body1"><b>Email:</b> @DoctorDetails.Email</MudText>
                                <MudText Typo="Typo.body1"><b>Phone:</b> @DoctorDetails.Phone</MudText>
                            </MudItem>

                            <MudItem xs="12" md="12">
                                <MudDivider Class="my-2" />
                                <MudText Typo="Typo.body1"><b>Degree:</b> @DoctorDetails.Degree</MudText>
                                <MudText Typo="Typo.body1"><b>Clinic:</b> @DoctorDetails.CurrentBrunch</MudText>
                                <MudText Typo="Typo.body1"><b>Department:</b> @CapitalizeWords(DepartmentName)</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudContainer>

    <div style="display: flex; justify-content: center; margin-top: 20px;">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="NavigateToPatientRecords">
            NEW VISIT
        </MudButton>

        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="NavigateToClinic">
            VIEW CLINIC
        </MudButton>
    </div>
}
else
{
    <MudText Typo="Typo.body1" Align="Align.Center" Style="color: gray;">Loading doctor information...</MudText>
}

@code {
    [Parameter]
    public int DoctorId { get; set; }

    private DoctorOutPutDTO DoctorDetails { get; set; }
    private string DepartmentName { get; set; }
    private bool loading = true;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            DoctorDetails =  DoctorService.GetDoctorDetailsById(DoctorId);

            if (DoctorDetails != null)
            {
                DepartmentName =  DepartmentService.GetDepartmentName(DoctorDetails.DepId);
            }

            loading = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching doctor info: {ex.Message}");
            loading = false;
        }
    }

    private void NavigateToPatientRecords()
    {
        NavigationManager.NavigateTo($"/PatientRecords/{DoctorId}");
    }



    private void NavigateToClinic()
    {
        var doctor = DoctorService.GetDoctorById(DoctorId);
        if (doctor.CID == 0 || doctor.CID == null)
        {
            // Display a message when no clinic is assigned
            Console.WriteLine("No clinic assigned for this doctor.");
            // Use the Snackbar to show the message
            Snackbar.Add("No clinic assigned to this doctor.", Severity.Warning);
        }
        else
        {
            // Proceed with the navigation if a valid clinic is assigned
            NavigationManager.NavigateTo($"/DoctorClinic/{doctor.CID}");
        }
    }


    private string CapitalizeWords(string input)
    {
        if (string.IsNullOrWhiteSpace(input)) return input;

        var cultureInfo = System.Globalization.CultureInfo.CurrentCulture;
        return cultureInfo.TextInfo.ToTitleCase(input.ToLower());
    }
}
